#! /usr/bin/env python

from cloudbaseinit.metadata import factory as metadata_factory
from cloudbaseinit.osutils import factory as osutils_factory
from cloudbaseinit.plugins import base as plugins_base
from cloudbaseinit.plugins import factory as plugins_factory

from cloudbaseinit.openstack.common import log as logging
from oslo_config import cfg

import sys

cfg.CONF()

logging.setup('cloudbaseinit')
LOG = logging.getLogger('cloudbaseinit.__main__')

osutils = osutils_factory.get_os_utils()
LOG.info("{}".format(osutils))

# choose meta data service "httpservice"
service = metadata_factory.get_metadata_service()
LOG.info('Metadata service loaded: \'%s\'' % service.get_name())

# test get meta data
LOG.info('get name =>', service.get_name())
#LOG.info('get user data =>', service.get_user_data('openstack'))
LOG.info('get meta data => {}'.format(service.get_meta_data('openstack')))

# load plugins
plugins = plugins_factory.load_plugins()

# running each plugins
for plugin in plugins:

    LOG.info('='*20)

    LOG.info("plugin => {}".format(plugin))

    plugin_name = plugin.get_name()
    LOG.info("plugin name => {}".format(plugin_name))

    plugin_get_os_requirements = plugin.get_os_requirements()
    LOG.info("plugin os requirements => {}".format(plugin_get_os_requirements))

    plugin_config_value = osutils.get_config_value(plugin_name,'Plugins')
    LOG.info("plugin config value => {}".format(plugin_config_value))

    try:
        LOG.info("{}".format(plugin.execute(service)))
        LOG.info('execute success ^_^')
    except:
        LOG.info('execute fail Q_Q')
